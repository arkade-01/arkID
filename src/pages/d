import { useState } from "react";
import { motion } from "framer-motion";

const Waitlist = () => {
  const [paymentMethod, setPaymentMethod] = useState("card");
  const [formData, setFormData] = useState({
    name: "",
    address: "",
    country: "",
    state: "",
    zipcode: "",
    linktree: "",
    email: "",
    phone: "",
    discountCode: "",
  });

  const [discountApplied, setDiscountApplied] = useState(false);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState("");
  const discountAmount = 30000;

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  const handlePaymentMethodChange = (method) => {
    setPaymentMethod(method);
  };

  const handleApplyDiscount = async () => {
    if (!formData.discountCode) return;
    setIsLoading(true);

    // Simulate API call
    setTimeout(() => {
      setDiscountApplied(true);
      setIsLoading(false);
    }, 1000);
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (
      !formData.name ||
      !formData.address ||
      !formData.country ||
      !formData.state ||
      !formData.zipcode ||
      !formData.email ||
      !formData.phone
    ) {
      setError("Please fill in all required fields");
      return;
    }

    setIsLoading(true);
    // Simulate payment processing
    setTimeout(() => {
      setIsLoading(false);
      alert("Order submitted successfully!");
    }, 2000);
  };

  return (
    <div className="min-h-screen bg-gray-200 font-sans">
      <div className="container mx-auto px-4 py-4 sm:py-8">
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-4 sm:gap-8">
          {/* Left Column - Form */}
          <div className="lg:col-span-2 order-2 lg:order-1">
            <form onSubmit={handleSubmit} className="space-y-4 sm:space-y-8">
              {/* Shipping & Personal Information */}
              <div>
                <div className="flex items-center gap-2 mb-6 justify-center lg:justify-start">
                  <h2 className="lg:text-[30px] text-[15px] font-bold text-black">
                    Shipping & Personal Information
                  </h2>
                  <svg
                    className="w-5 h-5 text-gray-600"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                    />
                  </svg>
                </div>

                <div className="space-y-4 flex flex-col items-center lg:items-start">
                  <div className="w-full flex justify-center lg:justify-start">
                    <input
                      type="text"
                      name="name"
                      placeholder="Name to appear on your card"
                      value={formData.name}
                      onChange={handleInputChange}
                      className="w-full lg:max-w-[712px] max-w-[383px] px-3 py-3 bg-transparent border-[1px] border-[#1C1C1E] outline-none text-base"
                    />
                  </div>

                  <div className="w-full flex justify-center lg:justify-start">
                    <input
                      type="text"
                      name="address"
                      placeholder="Address"
                      value={formData.address}
                      onChange={handleInputChange}
                      className="w-full lg:max-w-[712px] max-w-[383px] px-3 py-3 bg-transparent border-[1px] border-[#1C1C1E] outline-none text-base"
                    />
                  </div>

                  <div className="w-full flex justify-center lg:justify-start">
                    <div className="grid grid-cols-3 gap-2 w-full lg:max-w-[712px] max-w-[383px]">
                      <div className="relative col-span-1">
                        <select
                          name="country"
                          value={formData.country}
                          onChange={handleInputChange}
                          className="w-full px-3 py-3 bg-transparent border-[1px] border-[#1C1C1E] outline-none text-base appearance-none"
                        >
                          <option value="">Country</option>
                          <option value="NG">Nigeria</option>
                          <option value="US">United States</option>
                          <option value="UK">United Kingdom</option>
                        </select>
                        <svg
                          className="absolute right-[14px] top-[45%] transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            strokeWidth={2}
                            d="M19 9l-7 7-7-7"
                          />
                        </svg>
                      </div>

                      <div className="col-span-1">
                        <input
                          type="text"
                          name="state"
                          placeholder="State"
                          value={formData.state}
                          onChange={handleInputChange}
                          className="w-full px-3 py-3 bg-transparent border-[1px] border-[#1C1C1E] outline-none text-base"
                        />
                      </div>

                      <div className="col-span-1">
                        <input
                          type="text"
                          name="zipcode"
                          placeholder="Zipcode"
                          value={formData.zipcode}
                          onChange={handleInputChange}
                          className="w-full px-3 py-3 bg-transparent border-[1px] border-[#1C1C1E] outline-none text-base"
                        />
                      </div>
                    </div>
                  </div>

                  <div className="w-full flex justify-center lg:justify-start">
                    <input
                      type="url"
                      name="linktree"
                      placeholder="Enter your linktree link (if available)"
                      value={formData.linktree}
                      onChange={handleInputChange}
                      className="w-full lg:max-w-[712px] max-w-[383px] px-3 py-3 bg-transparent border-[1px] border-[#1C1C1E] outline-none text-base"
                    />
                  </div>

                  <div className="w-full flex justify-center lg:justify-start">
                    <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 w-full lg:max-w-[712px] max-w-[383px]">
                      <div>
                        <input
                          type="email"
                          name="email"
                          placeholder="Email address"
                          value={formData.email}
                          onChange={handleInputChange}
                          className="w-full px-3 py-3 bg-transparent border-[1px] border-[#1C1C1E] outline-none text-base"
                        />
                      </div>

                      <div>
                        <input
                          type="tel"
                          name="phone"
                          placeholder="Phone number"
                          value={formData.phone}
                          onChange={handleInputChange}
                          className="w-full px-3 py-3 bg-transparent border-[1px] border-[#1C1C1E] outline-none text-base"
                        />
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              {/* Payment Information */}
              <div>
                <div className="flex items-center gap-2 mb-6 justify-center lg:justify-start">
                  <h2 className="lg:text-[30px] text-[15px] font-bold text-black">
                    Payment Information
                  </h2>
                  <svg
                    className="w-5 h-5 text-gray-600"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"
                    />
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"
                    />
                  </svg>
                </div>
                <div className="grid grid-cols-1 sm:flex gap-2">
                  <button
                    type="button"
                    onClick={() => handlePaymentMethodChange("arkpay")}
                    className={`flex items-center justify-center gap-2 px-4 py-3 cursor-pointer border transition-all text-base ${
                      paymentMethod === "arkpay"
                        ? "bg-black text-white border-black"
                        : "bg-gray-100 text-black border-gray-300 hover:bg-gray-200"
                    }`}
                  >
                    <img
                      src="/Screenshot 2025-08-26 101826 1.png"
                      alt="ArkPay logo"
                      className="h-5 w-auto"
                    />
                    <span>ArkPay (Pay with crypto)</span>
                  </button>

                  <button
                    type="button"
                    onClick={() => handlePaymentMethodChange("card")}
                    className={`flex items-center cursor-pointer justify-center gap-2 px-4 py-3 border transition-all text-base ${
                      paymentMethod === "card"
                        ? "bg-black text-white border-black"
                        : "bg-gray-100 text-black border-gray-300 hover:bg-gray-200"
                    }`}
                  >
                    <div className="flex items-center gap-1">
                      <img
                        src="/ri_visa-line.png"
                        alt="Visa logo"
                        className="h-4 w-auto"
                      />
                      <img
                        src="/logos_mastercard.png"
                        alt="Mastercard logo"
                        className="h-4 w-auto"
                      />
                    </div>
                    <span>Card</span>
                  </button>
                </div>
              </div>
            </form>
          </div>

          {/* Mobile: Product Display First */}
          <div className="lg:hidden order-1">
            <div>
              {/* Product Display */}
              <div className="mb-6">
                <motion.div
                  initial={{ rotate: -5 }}
                  whileHover={{ rotate: 0, scale: 1.05 }}
                  transition={{ type: "spring", stiffness: 300 }}
                  className="mb-4 transform"
                >
                  <div className="w-full max-w-[400px] mx-auto h-[250px] bg-gradient-to-br from-purple-600 to-blue-600 flex items-center justify-center text-white text-2xl font-bold">
                    ArkCard
                  </div>
                </motion.div>

                <h3 className="text-[30px] font-bold text-black mb-2 text-center">
                  ArkCard
                </h3>
                <div className="flex items-center justify-center gap-3 text-center">
                  <p
                    className={`text-[20px] font-bold ${
                      discountApplied
                        ? "text-gray-400 line-through"
                        : "text-[#1C1C1E]"
                    }`}
                  >
                    ₦ {discountAmount.toLocaleString()}.00
                  </p>
                  {discountApplied && (
                    <p className="text-2xl font-bold text-[#1C1C1E]">₦ 0.00</p>
                  )}
                </div>
              </div>
            </div>
          </div>

          {/* Mobile: Checkout Section After Form */}
          <div className="lg:hidden order-4">
            <div>
              {/* Line Separator */}
              <hr className="border-gray-200 mb-6" />

              {/* Discount Code */}
              <div className="mb-6">
                <div className="flex flex-col gap-2">
                  <input
                    type="text"
                    name="discountCode"
                    placeholder="Discount code"
                    value={formData.discountCode}
                    onChange={handleInputChange}
                    className="w-full px-3 py-3 bg-transparent border border-[#1C1C1E] outline-none text-base"
                  />
                  <button
                    type="button"
                    onClick={handleApplyDiscount}
                    disabled={
                      !formData.discountCode || discountApplied || isLoading
                    }
                    className="px-4 py-3 bg-black text-white hover:bg-gray-800 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors text-base"
                  >
                    {isLoading
                      ? "Verifying..."
                      : discountApplied
                      ? "Applied"
                      : "Apply"}
                  </button>
                </div>
              </div>

              {/* Order Summary */}
              <div className="mb-6">
                <div className="space-y-3">
                  <div className="flex justify-between">
                    <span className="text-gray-600">Subtotal</span>
                    <span
                      className={`font-semibold ${
                        discountApplied ? "text-gray-400 line-through" : ""
                      }`}
                    >
                      ₦ {discountAmount.toLocaleString()}.00
                    </span>
                  </div>
                  {discountApplied && (
                    <div className="flex justify-between">
                      <span className="text-green-600">Discount Applied</span>
                      <span className="font-semibold text-green-600">
                        -₦ {discountAmount.toLocaleString()}.00
                      </span>
                    </div>
                  )}
                  <hr className="border-gray-200" />
                  <div className="flex justify-between">
                    <span className="text-gray-600">Total</span>
                    <span className="font-semibold">
                      ₦{" "}
                      {discountApplied
                        ? "0.00"
                        : `${discountAmount.toLocaleString()}.00`}
                    </span>
                  </div>
                </div>
              </div>

              {/* Error Display */}
              {error && (
                <div className="mb-4 p-3 bg-red-100 border border-red-400 text-red-700">
                  {error}
                </div>
              )}

              {/* Pay Button */}
              <button
                type="submit"
                onClick={handleSubmit}
                disabled={isLoading}
                className="w-full bg-black text-white py-4 font-semibold text-lg hover:bg-gray-800 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors"
              >
                {isLoading ? "Processing..." : "Pay"}
              </button>
            </div>
          </div>

          {/* Desktop: Right Column - Product & Order Summary */}
          <div className="hidden lg:block lg:col-span-1 lg:order-2">
            <div>
              {/* Product Display */}
              <div className="mb-6">
                <motion.div
                  initial={{ rotate: -5 }}
                  whileHover={{ rotate: 0, scale: 1.05 }}
                  transition={{ type: "spring", stiffness: 300 }}
                  className="mb-4 transform"
                >
                  <div className="w-full h-[250px] bg-gradient-to-br from-purple-600 to-blue-600 flex items-center justify-center text-white text-2xl font-bold">
                    ArkCard
                  </div>
                </motion.div>

                <h3 className="text-xl font-bold text-black mb-2 text-center">
                  ArkCard
                </h3>
                <div className="flex items-center justify-center gap-3">
                  <p
                    className={`text-2xl font-regular ${
                      discountApplied
                        ? "text-gray-400 line-through"
                        : "text-[#1C1C1E]"
                    }`}
                  >
                    ₦ {discountAmount.toLocaleString()}.00
                  </p>
                  {discountApplied && (
                    <p className="text-2xl font-regular text-[#1C1C1E]">
                      ₦ 0.00
                    </p>
                  )}
                </div>
              </div>

              {/* Discount Code */}
              <div className="mb-6">
                <div className="flex gap-2">
                  <input
                    type="text"
                    name="discountCode"
                    placeholder="Discount code"
                    value={formData.discountCode}
                    onChange={handleInputChange}
                    className="flex-1 px-3 py-3 bg-transparent border-[1px] border-[#1C1C1E] outline-none text-base"
                  />
                  <button
                    type="button"
                    onClick={handleApplyDiscount}
                    disabled={
                      !formData.discountCode || discountApplied || isLoading
                    }
                    className="px-4 py-3 bg-black text-white hover:bg-gray-800 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors whitespace-nowrap text-base"
                  >
                    {isLoading
                      ? "Verifying..."
                      : discountApplied
                      ? "Applied"
                      : "Apply"}
                  </button>
                </div>
              </div>

              {/* Order Summary */}
              <div className="mb-6">
                <div className="space-y-3">
                  <div className="flex justify-between">
                    <span className="text-gray-600">Subtotal</span>
                    <span
                      className={`font-semibold ${
                        discountApplied ? "text-gray-400 line-through" : ""
                      }`}
                    >
                      ₦ {discountAmount.toLocaleString()}.00
                    </span>
                  </div>
                  {discountApplied && (
                    <div className="flex justify-between">
                      <span className="text-green-600">Discount Applied</span>
                      <span className="font-semibold text-green-600">
                        -₦ {discountAmount.toLocaleString()}.00
                      </span>
                    </div>
                  )}
                  <hr className="border-gray-200" />
                  <div className="flex justify-between">
                    <span className="text-gray-600">Total</span>
                    <span className="font-semibold">
                      ₦{" "}
                      {discountApplied
                        ? "0.00"
                        : `${discountAmount.toLocaleString()}.00`}
                    </span>
                  </div>
                </div>
              </div>

              {/* Error Display */}
              {error && (
                <div className="mb-4 p-3 bg-red-100 border border-red-400 text-red-700">
                  {error}
                </div>
              )}

              {/* Pay Button */}
              <button
                type="submit"
                onClick={handleSubmit}
                disabled={isLoading}
                className="w-full bg-black text-white py-4 font-semibold text-lg hover:bg-gray-800 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors"
              >
                {isLoading ? "Processing..." : "Pay"}
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Waitlist;
